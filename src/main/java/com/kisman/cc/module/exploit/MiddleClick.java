package com.kisman.cc.module.exploit;

import com.kisman.cc.module.Category;
import com.kisman.cc.module.Module;
import com.kisman.cc.settings.Setting;
import i.gishreloaded.gishcode.utils.BlockUtils;
import net.minecraft.block.Block;
import net.minecraft.entity.player.InventoryPlayer;
import net.minecraft.item.ItemEnderPearl;
import net.minecraft.item.ItemStack;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.RayTraceResult;
import org.lwjgl.input.Mouse;

public class MiddleClick extends Module {
    private boolean clicked;

    private Setting pearl = new Setting("Pearl", this, true);
    private Setting exp = new Setting("Exp", this, true);

    public MiddleClick() {
        super("MiddleClick", "MiddleClick", Category.EXPLOIT);
    }

    public void update() {
        if(mc.player == null && mc.world == null) return;

        if(mc.objectMouseOver == null) return;

        if(mc.currentScreen == null && Mouse.isButtonDown(2)) {
            if(!clicked) {
                if(mc.objectMouseOver.typeOfHit == RayTraceResult.Type.BLOCK && exp.getValBoolean()) {
                    Block block = BlockUtils.getBlock(mc.objectMouseOver.getBlockPos());
                    BlockPos blockPos = mc.objectMouseOver.getBlockPos();

                    if (Block.getIdFromBlock(block) != 0) {
                        final int expSlot = findExpInHotbat();

                        if(expSlot != -1) {
                            final int oldSlot = mc.player.inventory.currentItem;
                            mc.player.inventory.currentItem = expSlot;
                            mc.playerController.processRightClick(mc.player, mc.world, EnumHand.MAIN_HAND);
                            mc.player.inventory.currentItem = oldSlot;
                        }
                    }
                } else if(pearl.getValBoolean()) {
                    final int pearlSLot = findPearlInHotbar();
                    if(pearlSLot  != -1) {
                        final int oldSlot = mc.player.inventory.currentItem;
                        mc.player.inventory.currentItem = pearlSLot;
                        mc.playerController.processRightClick(mc.player, mc.world, EnumHand.MAIN_HAND);
                        mc.player.inventory.currentItem = oldSlot;
                    }
                }

                clicked = true;
            } else {
                clicked = false;
            }
        }
    }

    private boolean isItemStackPearl(final ItemStack itemStack) {
        return itemStack.getItem() instanceof ItemEnderPearl;
    }

    private boolean isItemStackExp(final ItemStack itemStack) {
        return itemStack.getItem() instanceof ItemEnderPearl;
    }


    private int findPearlInHotbar() {
        for (int index = 0; InventoryPlayer.isHotbar(index); index++) {
            if (isItemStackPearl(mc.player.inventory.getStackInSlot(index))) return index;
        }
        return -1;
    }

    private int findExpInHotbat() {
        for (int index = 0; InventoryPlayer.isHotbar(index); index++) {
            if (isItemStackExp(mc.player.inventory.getStackInSlot(index))) return index;
        }
        return -1;
    }
}
